// Copyright (C) 2021 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#include <stormkit/core/PlatformMacro.hpp>

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.render.resource.imageview;
// clang-format on
export {
#else
    #include <filesystem>

    /////////// - StormKit::core - ///////////
    #include <stormkit/core/Memory.mpp>
    #include <stormkit/core/Types.mpp>

    /////////// - StormKit::render - ///////////
    #include <stormkit/render/core/Enums.mpp>
    #include <stormkit/render/core/Fwd.hpp>
    #include <stormkit/render/core/Vulkan.mpp>

    #include <stormkit/render/resource/Fwd.hpp>
    #include <stormkit/render/resource/ImageSubresourceRange.mpp>
#endif

    namespace stormkit::render {
        class STORMKIT_PUBLIC ImageView {
          public:
            static constexpr auto DEBUG_TYPE = DebugObjectType::Image_View;

            ImageView(const Device &device,
                      const Image &image,
                      ImageViewType type                      = ImageViewType::T2D,
                      ImageSubresourceRange subresource_range = {});
            ~ImageView();

            ImageView(const ImageView &) = delete;
            auto operator=(const ImageView &) -> ImageView & = delete;

            ImageView(ImageView &&) noexcept;
            auto operator=(ImageView &&) noexcept -> ImageView &;

            [[nodiscard]] auto image() const noexcept -> const Image &;
            [[nodiscard]] auto type() const noexcept -> ImageViewType;
            [[nodiscard]] auto subresourceRange() const noexcept -> const ImageSubresourceRange &;

            [[nodiscard]] operator VkImageView() const noexcept;
            [[nodiscard]] auto vkHandle() const noexcept -> VkImageView;
            [[nodiscard]] constexpr auto vkObjectType() const noexcept -> VkObjectType;

            DEVICE_CONST_GETTER
          private:
            const Device *m_device = nullptr;
            const Image *m_image   = nullptr;

            ImageViewType m_type                      = {};
            ImageSubresourceRange m_subresource_range = {};

            VkImageView m_image_view = VK_NULL_HANDLE;
        };
    } // namespace stormkit::render

#if defined(STORMKIT_CXX20_MODULES)
}
#endif

#include "ImageView.inl"
