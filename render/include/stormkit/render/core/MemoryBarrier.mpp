// Copyright (C) 2021 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.render.core.dynamicloader;

/////////// - STL - ///////////
import <vector>;

/////////// - StormKit::render - ///////////
import stormkit.render.core.vulkan;
// clang-format on
export {
#else
    /////////// - STL - ///////////
    #include <vector>

    /////////// - StormKit::core - ///////////
    #include <stormkit/core/Types.mpp>

    /////////// - StormKit::render - ///////////
    #include <stormkit/render/core/Enums.mpp>
    #include <stormkit/render/core/Fwd.hpp>
    #include <stormkit/render/core/Vulkan.mpp>

    #include <stormkit/render/resource/Fwd.hpp>
    #include <stormkit/render/resource/ImageSubresourceRange.mpp>
#endif

    namespace stormkit::render {
        static constexpr auto QUEUE_FAMILY_IGNORED = core::UInt32 { VK_QUEUE_FAMILY_IGNORED };

        struct MemoryBarrier {
            AccessFlag src;
            AccessFlag dst;
        };

        struct BufferMemoryBarrier {
            AccessFlag src;
            AccessFlag dst;

            core::UInt32 src_queue_family_index = QUEUE_FAMILY_IGNORED;
            core::UInt32 dst_queue_family_index = QUEUE_FAMILY_IGNORED;

            const Buffer &buffer;
            core::USize size;
            core::UInt64 offset = 0;
        };

        struct ImageMemoryBarrier {
            AccessFlag src;
            AccessFlag dst;

            ImageLayout old_layout;
            ImageLayout new_layout;

            core::UInt32 src_queue_family_index = QUEUE_FAMILY_IGNORED;
            core::UInt32 dst_queue_family_index = QUEUE_FAMILY_IGNORED;

            const Image &image;
            ImageSubresourceRange range;
        };
    } // namespace stormkit::render

#if defined(STORMKIT_CXX20_MODULES)
}
#endif
