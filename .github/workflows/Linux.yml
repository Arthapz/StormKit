name: Linux

on:
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '.github/workflows/Windows-LLVM.yml'
      - '.github/workflows/Windows-MSVC.yml'
      - '.github/workflows/macOS.yml'
      - '.github/workflows/iOS.yml'
      - '.github/workflows/Android.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

  push:
    branches: [develop]
    paths-ignore:
      - '.github/workflows/Windows-MSVC.yml'
      - '.github/workflows/Linux.yml'
      - '.github/workflows/macOS.yml'
      - '.github/workflows/iOS.yml'
      - '.github/workflows/Android.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    name: ${{ matrix.os }}-x64 ( ${{ matrix.kind }}-${{ matrix.mode }} )

    strategy:
      fail-fast: false
      matrix:
        os: [Linux]
        kind: [static, shared]
        mode: [release, debug, asan]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: ${{ github.ref }}-${{ github.base_ref }}-${{ github.head_ref }}-Linux-${{ matrix.kind }}-${{ matrix.mode }}

    steps:
      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - name: Install XMake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev
          actions-cache-folder: .xmake-cache-${{ steps.cache_key.outputs.key }}

      - name: Update xmake to patched xmake
        run: xmake update -s https://github.com/Arthapz/xmake.git#modules

      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT

      - name: Retrieve cached xmake dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ matrix.os }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-${{ steps.cache_key.outputs.key }}

      - name: Configure & Build
        id: build
        run: |
          xmake f -v --yes -m ${{ (matrix.mode == 'release' || matrix.mode == 'debug') && matrix.mode || 'releasedbg' }} -k ${{ matrix.kind }} --sanitizers=${{ matrix.mode == 'asan' && 'y' || 'n' }} --examples=y --tests=y --toolchain=llvm --mold=y --runtimes="c++_shared" --sdk="/opt/llvm-git/usr"
          xmake b -v

      - name: Tests
        run: LD_LIBRARY_PATH="/opt/llvm-git/usr/lib" xmake test -v

      - name: Installation
        run: xmake install -v --installdir="${{ runner.workspace }}/output"

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v1
        with:
          name: Linux-x64-${{ matrix.kind }}-${{ matrix.mode }}
          path: ${{ runner.workspace }}/output
