name: Linux

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: ${{ matrix.os.name }} ( ${{matrix.os.compiler }} ${{ matrix.kind }}, ${{ matrix.build_type }} )
    runs-on: ${{ matrix.os.value }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - {
           name: "Ubuntu",
           compiler: "GCC",
           value: ubuntu-22.04,
           triplet: "x64-linux"
        }
            
        kind: [static, shared]
        build_type: [release, debug]
    steps:
        - name: Install apt deps
          id: aptdeps
          run: |
            wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
            sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list https://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo add-apt-repository -y ppa:deadsnakes/ppa
            sudo apt -q update
            sudo apt -y install vulkan-sdk \
              gcc \
              g++ \
              libxcb-util0-dev \
              tar \
              curl \
              zip \
              unzip \
              libxcb-xinput-dev \
              libwayland-dev \
              libxkbcommon-dev \
              libxkbcommon-x11-dev \
              libxcb-randr0-dev \
              libxcb1-dev \
              libxcb-icccm4-dev \
              libxcb-xkb-dev \
              libxcb-keysyms1-dev \
              libxcb-xfixes0-dev \
              cmake \
              meson \
              ninja-build

        - name: Install xmake
          uses: xmake-io/github-action-setup-xmake@v1

        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            
        - name: Configure & Build
          id: confandbuild
          run: |
            xmake f --unity_build=y -v --yes -m ${{ matrix.build_type }} -k ${{ matrix.kind }} 
            xmake b -v

        - name: Install
          id: install
          run: |
            xmake install -v --installdir="${{ runner.workspace }}/StormKit_Output"

        - name: Upload artifacts
          id: upload
          uses: actions/upload-artifact@v1
          with:
            name: ${{ matrix.os.name }}-${{ matrix.os.compiler }}-${{ matrix.kind }}-${{ matrix.build_type }}
            path: ${{ runner.workspace }}/StormKit_Output
 