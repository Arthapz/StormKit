---
name: macOS

on:
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - .github/workflows/Linux.yml
      - .github/workflows/Windows.yml
      - .github/workflows/iOS.yml
      - .github/workflows/Android.yml
      - .github/workflows/AutoMerger.yml
      - .gitignore
      - LICENSE
      - README.md
  push:
    branches: [develop]
    paths-ignore:
      - .github/workflows/Windows.yml
      - .github/workflows/Linux.yml
      - .github/workflows/iOS.yml
      - .github/workflows/Android.yml
      - .github/workflows/AutoMerger.yml
      - .gitignore
      - LICENSE
      - README.md

jobs:
  build:
    name: ${{ matrix.compiler }} ${{ matrix.arch }}  (${{ matrix.kind }}/${{ matrix.mode }})
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-15]
        compiler: [LLVM-libc++]
        arch: [arm64]
        kind: [static, shared]
        mode: [release, debug]

    runs-on: ${{ matrix.os }}${{ (matrix.arch == 'x64') && '-large' || '' }}

    concurrency:
      group: ${{ github.ref }}-${{ github.base_ref }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.kind
        }}-${{ matrix.mode }}

    steps:
      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: llvm ninja cmake meson libpng libjpeg-turbo

      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ github.workspace }}/xmake-global" >> $GITHUB_ENV
        shell: bash

      - name: Setup XMake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev
          actions-cache-folder: .xmake-cache${{ steps.cache_key.outputs.key }}

      - name: Update xmake repository
        run: xmake repo --update

      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Retrieve cached xmake dependencies
        id: restore-depcache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-${{ steps.cache_key.outputs.key
            }}

      - name: Configure & Install dependencies
        id: configure
        run: |
          xmake f -v --yes -m ${{ (matrix.mode == 'release' || matrix.mode == 'debug') && matrix.mode || 'releasedbg' }} -k ${{ matrix.kind }} --examples=y --tests=y  --gpu=n --engine=n --toolchain=llvm --sdk="$(brew --prefix)/opt/llvm/" --runtimes="c++_shared"

      - name: Save cached xmake dependencies
        if: ${{ !steps.restore-depcache.outputs.cache-hit }}
        uses: actions/cache/save@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ steps.restore-depcache.outputs.cache-primary-key }}

      - name: Build
        id: build
        run: |
          xmake b -v

      - name: Run unit tests
        id: tests
        run: xmake test -v

      - name: Installation
        id: install
        run: xmake install -v --installdir="${{ github.workspace }}/output"

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.kind }}-${{ matrix.mode }}
          path: ${{ github.workspace }}/output
