name: Windows-LLVM

on:
  pull_request:
    branches: [develop]
    paths-ignore:
      - '.github/workflows/Windows-MSVC.yml'
      - '.github/workflows/Linux.yml'
      - '.github/workflows/macOS.yml'
      - '.github/workflows/iOS.yml'
      - '.github/workflows/Android.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    name: ${{ matrix.os }}-LLVM-${{ matrix.arch }} ( ${{ matrix.kind }}-${{ matrix.mode }} )

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        kind: [static, shared]
        mode: [release, debug, asan]
        arch: [x64]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: ${{ github.ref }}-${{ github.base_ref }}-${{ github.head_ref }}-${{ matrix.os }}-LLVM-${{ matrix.kind }}-${{ matrix.mode }}

    steps:
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.3
        with:
          minimum-size: 8GB
          maximum-size: 32GB
          disk-root: "D:"

      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $env:GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache LLVM
        id: cache_llvm
        uses: actions/cache@v3.2.2
        with:
          path: ${{ runner.workspace }}/StormKit/llvm2/
          key: ${{ matrix.os }}-llvm
          restore-keys: |
            ${{ matrix.os }}-llvm

      - name: Download and Uncompress LLVM
        if: ${{ steps.cache_llvm.outputs.cache-hit != 'true' }}
        run: |
          C:/msys64/usr/bin/wget 'http://86.221.35.29:1337/llvm-win.7z'
          7z x llvm-win.7z
          rm llvm-win.7z

      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $env:GITHUB_ENV

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev
          actions-cache-folder: .xmake-cache-${{ steps.cache_key.outputs.key }}

      - name: Update xmake repository
        run: xmake repo --update

      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" >> $env:GITHUB_OUTPUT

      - name: Retrieve cached xmake dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ matrix.os }}-LLVM-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-${{ steps.cache_key.outputs.key }}

      - name: Configure & Build
        id: build_llvm
        run: |
          {{  }}
          xmake f -vD --yes -a ${{ matrix.arch }}  -m ${{ (matrix.mode == 'release' || matrix.mode == 'debug') && matrix.mode || 'releasedbg' }} -k ${{ matrix.kind }} --enable_examples=y --enable_tests=y --enable_gpu=n --libc++=y --toolchain=llvm --sdk="${{ runner.workspace }}/StormKit/llvm2/" --libc++=y --cxxflags="-fno-delayed-template-parsing -cxx-isystem${{ runner.workspace }}/StormKit/llvm2/include/c++/v1" --ldflags="-L${{ runner.workspace }}/StormKit/llvm2/lib" --shflags="-L${{ runner.workspace }}/StormKit/llvm2/lib"
          xmake b -vD

      - name: Tests
        run: |
          cp "${{ runner.workspace }}/StormKit/llvm2/lib/c++.dll" "${{ runner.workspace }}/StormKit/build/windows/${{ matrix.arch }}/${{ (matrix.mode == 'release' || matrix.mode == 'debug') && matrix.mode || 'releasedbg' }}/"
          xmake test -vD

      - name: Installation
        run: xmake install -vD --installdir="${{ runner.workspace }}/output"

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-LLVM-${{ matrix.kind }}-${{ matrix.mode }}
          path: ${{ runner.workspace }}/output
