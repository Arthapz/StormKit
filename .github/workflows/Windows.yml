name: Windows

on:
  push:
    branches: [develop]
    paths-ignore:
      - '.github/workflows/Linux.yml'
      - '.github/workflows/macOS.yml'
      - '.github/workflows/iOS.yml'
      - '.github/workflows/Android.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '.github/workflows/Linux.yml'
      - '.github/workflows/macOS.yml'
      - '.github/workflows/iOS.yml'
      - '.github/workflows/Android.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.arch }} ( ${{ matrix.kind }}-${{ matrix.mode }}-${{ matrix.vs_runtime }} )

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        compiler: [llvm]
        kind: [static, shared]
        mode: [release, debug, asan]
        vs_runtime: [MT, MD]
        arch: [x64]

    runs-on: ${{ matrix.os }}

    concurrency:
      group: ${{ github.ref }}-${{ github.base_ref }}-${{ github.head_ref }}-Windows-${{ matrix.compiler }}-${{ matrix.kind }}-${{ matrix.mode }}-${{ matrix.vs_runtime }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: branch@dev

      - name: Update xmake repository
        run: xmake repo --update

      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.3
        with:
          minimum-size: 8GB
          maximum-size: 32GB
          disk-root: "D:"

      - name: Bootstrap LLVM 
        id: install-llvm
        if: ${{ matrix.compiler == 'llvm' }}
        run: |
          wget http://86.221.35.29:1337/llvm-win.7z
          7z x llvm.7z

      - name: Configure & Build
        id: build_msvc
        if: ${{ matrix.compiler == 'msvc' }}
        run: |
          {{  }}
          xmake f -vD --yes -a ${{ matrix.arch }}  -m ${{ (matrix.mode == 'release' || matrix.mode == 'debug') && matrix.mode || 'releasedbg' }} -k ${{ matrix.kind }} --vs_runtime=${{ matrix.vs_runtime }} --enable_examples=y --enable_tests=y --enable_gpu=n
          xmake b -vD

      - name: Configure & Build
        id: build_llvm
        if: ${{ matrix.compiler == 'llvm' }}
        run: |
          {{  }}
          xmake f -vD --yes -a ${{ matrix.arch }}  -m ${{ (matrix.mode == 'release' || matrix.mode == 'debug') && matrix.mode || 'releasedbg' }} -k ${{ matrix.kind }} --vs_runtime=${{ matrix.vs_runtime }} --enable_examples=y --enable_tests=y --enable_gpu=n --libc++=y --toolchain=llvm --sdk="$PWD/llvm/" --libc++=y --cxxflags="-fno-delayed-template-parsing "-cxx-isystem$PWD/llvm/include/c++/v1" --ldflags="-L$PWD/llvm/lib" --shflags="-L$PWD/llvm/lib"
          xmake b -vD

      - name: Tests
        if: ${{ matrix.compiler == 'msvc' }}
        run: |
          xmake test -vD

      - name: Tests
        if: ${{ matrix.compiler == 'llvm' }}
        run: |
          set PATH=%PATH%;$PWD/llvm/lib
          xmake test -vD

      - name: Installation
        run: xmake install -vD --installdir="${{ runner.workspace }}/output"

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.kind }}-${{ matrix.mode }}-${{ matrix.vs_runtime }}
          path: ${{ runner.workspace }}/output
