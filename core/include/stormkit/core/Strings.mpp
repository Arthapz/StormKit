// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#include <stormkit/core/AssertMacro.hpp>

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.core.strings;

    /////////// - STL - ///////////
import <functional>;
import <iomanip>;
import <locale>;
import <sstream>;
import <string>;
import <string_view>;
import <type_traits>;

/////////// - StormKit::core - ///////////
import stormkit.core.types;
import stormkit.core.hashmap;
import stormkit.core.concepts;

// clang-format on
export {
#else
/////////// - STL - ///////////
    #include <functional>
    #include <iomanip>
    #include <locale>
    #include <sstream>
    #include <string>
    #include <string_view>
    #include <type_traits>

    /////////// - StormKit::core - ///////////
    #include <stormkit/core/Concepts.mpp>
    #include <stormkit/core/HashMap.mpp>
    #include <stormkit/core/Types.mpp>
#endif

    namespace stormkit::core {
        auto split(std::string_view string, char delim) -> std::vector<std::string>;

        template<std::integral T, bool complete = true>
        auto intToHex(T i) -> std::string;

        auto toLower(std::string_view string, std::locale locale = std::locale("")) -> std::string;
        auto toUpper(std::string_view string, std::locale locale = std::locale("")) -> std::string;

        struct StringHash {
            using is_transparent = void;

            auto operator()(const std::string &value) const noexcept -> core::Hash64;
            auto operator()(std::string_view value) const noexcept -> core::Hash64;
        };

        template<class T>
        using StringHashMap =
            stormkit::core::HashMap<std::string, T, stormkit::core::StringHash, std::equal_to<>>;

        using CZString  = const char *;
        using ZString   = char *;
        using CWZString = const wchar_t *;
        using WZString  = wchar_t *;
    } // namespace stormkit::core

#if defined(STORMKIT_CXX20_MODULES)
}
#endif

#include "Strings.inl"
