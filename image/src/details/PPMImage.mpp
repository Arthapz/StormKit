// Copryright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.image.details.ppmimage;

/////////// - StormKit::core - ///////////
import stormkit.core.expected;
import stormkit.core.format;

/////////// - StormKit::image - ///////////
import stormkit.image.Image;
// clang-format on
export {
#else
/////////// - StormKit::core - ///////////
    #include <stormkit/core/Expected.mpp>
    #include <stormkit/core/Format.mpp>

/////////// - StormKit::core - ///////////
    #include <stormkit/image/Image.mpp>
#endif
    namespace stormkit::image::details {
        [[nodiscard]] auto loadPPM(core::ByteConstSpan data) noexcept
            -> core::Expected<image::Image, image::Image::Error>;

        [[nodiscard]] auto savePPM(const image::Image &image,
                                   image::Image::CodecArgs args,
                                   const std::filesystem::path &filepath) noexcept
            -> core::Expected<void, image::Image::Error>;

        [[nodiscard]] auto savePPM(const image::Image &image, image::Image::CodecArgs args) noexcept
            -> core::Expected<core::ByteArray, image::Image::Error>;
    } // namespace stormkit::image::details

#if defined(STORMKIT_CXX20_MODULES)
}
#endif
