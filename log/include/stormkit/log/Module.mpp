// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.log.module;

/////////// - STL - ///////////
import <string>;

/////////// - StormKit::core - ///////////
import stormkit.core.namedtype;
import stormkit.core.types;

// clang-format on
export {
#else
    /////////// - STL - ///////////
    #include <string>

    /////////// - StormKit::core - ///////////
    #include <stormkit/core/NamedType.mpp>
    #include <stormkit/core/Types.mpp>
#endif

    namespace stormkit::log {
        namespace details {
            template<class T>
            struct ModuleTraits: core::Comparable<T>,
                                 core::MethodCallable<T>,
                                 core::Dereferencable<T> {};
        } // namespace details

        using Module =
            core::NamedType<std::string, struct LogModuleParameter, details::ModuleTraits>;

        [[nodiscard]] auto makeModule(std::string_view str) -> stormkit::log::Module;

        [[nodiscard]] auto operator"" _module(const char *str, core::USize sz)
            -> stormkit::log::Module;
    } // namespace stormkit::log

#if defined(STORMKIT_CXX20_MODULES)
}
#endif

#include "Module.inl"
