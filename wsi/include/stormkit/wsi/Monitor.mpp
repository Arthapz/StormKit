// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#include <stormkit/core/FlagsMacro.hpp>
#include <stormkit/core/FormatMacro.hpp>

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.wsi.videosettings;

/////////// - StormKit::core - ///////////
import stormkit.core.format;
import stormkit.core.types;
// clang-format on
export {
#else
    /////////// - StormKit::core - ///////////
    #include <stormkit/core/Format.mpp>
    #include <stormkit/core/Math.mpp>
#endif

    namespace stormkit::wsi {
        struct Monitor {
            enum class Flags { None = 0, Primary };

            Flags flags = Flags::None;
            std::string name;

            std::vector<core::ExtentU> sizes;

            void *handle = nullptr;

            [[nodiscard]] constexpr auto operator<=>(const Monitor &other) const noexcept
                -> std::strong_ordering;

            [[nodiscard]] constexpr auto operator==(const Monitor &other) const noexcept -> bool;
        };

        FORMATTER(stormkit::wsi::Monitor,
                  "Monitor {{\n"
                  "   flags: {},\n"
                  "   name: {},\n"
                  "   sizes: {}\n"
                  "}}",
                  data.flags,
                  data.name,
                  data.sizes);
    } // namespace stormkit::wsi

    CUSTOM_FORMAT(stormkit::wsi::Monitor, stormkit::wsi::toString(data))
    FLAG_ENUM(stormkit::wsi::Monitor::Flags)

#if defined(STORMKIT_CXX20_MODULES)
}
#endif

#include "Monitor.inl"
