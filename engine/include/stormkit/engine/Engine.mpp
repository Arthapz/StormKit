// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.engine.engine;

/////////// - STL - ///////////
import <vector>;

/////////// - StormKit::render - ///////////
import stormkit.gpu.core.vulkan;
// clang-format on
export {
#else
    /////////// - StormKit::core - ///////////
    #include <stormkit/core/ThreadPool.mpp>
    #include <stormkit/core/Types.mpp>

    /////////// - StormKit::wsi - ///////////
    #include <stormkit/wsi/EventHandler.mpp>
    #include <stormkit/wsi/Fwd.hpp>

    /////////// - StormKit::entities - ///////////
    #include <stormkit/entities/EntityManager.mpp>

    /////////// - StormKit::engine - ///////////
    #include <stormkit/engine/Fwd.hpp>
#endif

    namespace stormkit::engine {
        class STORMKIT_PUBLIC Engine {
          public:
            explicit Engine(wsi::Window &window);
            ~Engine();

            Engine(const Engine &) = delete;
            auto operator=(const Engine &) -> Engine & = delete;

            Engine(Engine &&) noexcept;
            auto operator=(Engine &&) noexcept -> Engine &;

            auto world() noexcept -> entities::EntityManager &;
            auto world() const noexcept -> const entities::EntityManager &;

            auto window() const noexcept -> wsi::Window &;

            auto threadPool() noexcept -> core::ThreadPool &;
            auto threadPool() const noexcept -> const core::ThreadPool &;

            auto renderer() noexcept -> Renderer &;

            auto run(const int argc, const char **argv) -> stormkit::core::Int32;

          private:
            wsi::Window *m_window = nullptr;
            wsi::EventHandler m_event_handler;

            core::ThreadPool m_thread_pool;

            RendererOwnedPtr m_renderer;

            entities::EntityManager m_world;

            bool m_fullscreen_enabled = false;
        };

    } // namespace stormkit::engine

#include "Engine.inl"
