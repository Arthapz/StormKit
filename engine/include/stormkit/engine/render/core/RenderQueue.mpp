// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.engine.render.renderer;

/////////// - STL - ///////////
import <vector>;

/////////// - StormKit::render - ///////////
import stormkit.gpu.core.vulkan;
// clang-format on
export {
#else
    /////////// - StormKit::core - ///////////
    #include <stormkit/core/Types.mpp>

    /////////// - StormKit::wsi - ///////////
    #include <stormkit/wsi/Fwd.hpp>

    /////////// - StormKit::gpu - ///////////
    #include <stormkit/gpu/Fwd.hpp>

    #include <stormkit/gpu/resource/ImageView.mpp>

    /////////// - StormKit::engine - ///////////
    #include <stormkit/engine/Fwd.hpp>
#endif

    namespace stormkit::engine {
        class STORMKIT_PUBLIC RenderQueue {
          public:
            using ID                         = core::UInt64;
            static constexpr auto INVALID_ID = std::numeric_limits<ID>::max();

            RenderQueue();
            ~RenderQueue();

            RenderQueue(const RenderQueue &) = delete;
            auto operator=(const RenderQueue &) -> RenderQueue & = delete;

            RenderQueue(RenderQueue &&) noexcept;
            auto operator=(RenderQueue &&) noexcept -> RenderQueue &;

            auto addMesh(const MeshComponent &mesh) -> ID;
            auto removeMesh(ID id) -> void;

            auto update() -> void;

          private:
            struct RenderEntry {
                RenderEntry(ID _id, const MeshComponent &_mesh) noexcept
                    : id { _id }, mesh { &_mesh } {};

                ID id;

                const MeshComponent *mesh;
            };

            std::mutex m_mutex;

            ID m_next_id = 0;
            std::vector<RenderEntry> m_entries;

            std::vector<RenderEntry> m_to_be_added;
            std::vector<ID> m_to_be_removed;
        };
    } // namespace stormkit::engine
