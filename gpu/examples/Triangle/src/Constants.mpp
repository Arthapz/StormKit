// Copyright (C) 2023 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

#ifdef STORMKIT_BUILD_MODULES
export module Constants;

import std;

import stormkit.Core;
import stormkit.Log;
import stormkit.Gpu;

export {
#else
    #include <stormkit/std.hpp>

    #include <stormkit/Core.hpp>
    #include <stormkit/Gpu.hpp>
    #include <stormkit/Log.hpp>
#endif

    struct Vertex {
        stormkit::core::math::Vector2F position;
        stormkit::core::math::Vector3f color;
    };

    inline constexpr auto WINDOW_TITLE            = "StormKit Triangle Example";
    inline constexpr auto MESH_VERTEX_BUFFER_SIZE = VERTEX_SIZE * 3;
    inline constexpr auto MESH_VERTEX_BINDING_DESCRIPTIONS =
        std::array { stormkit::gpu::VertexBindingDescription { .binding = 0,
                                                               .stride  = VERTEX_SIZE } };
    inline constexpr auto MESH_VERTEX_ATTRIBUTE_DESCRIPTIONS = [] {
        using namespace stormkit::gpu;
        return std::array { VertexInputAttributeDescription { .location = 0,
                                                              .binding  = 0,
                                                              .format   = Format::Float2,
                                                              .offset =
                                                                  offsetof(Vertex, position) },
                            VertexInputAttributeDescription { .location = 1,
                                                              .binding  = 0,
                                                              .format   = Format::Float3,
                                                              .offset = offsetof(Vertex, color) } };
    }();

    IN_MODULE_LOGGER("StormKit.Triangle");

#ifdef STORMKIT_BUILD_MODULES
}
#endif
