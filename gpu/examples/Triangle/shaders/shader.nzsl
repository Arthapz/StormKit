[nzsl_version("1.0")]

module Shader;

struct VertIn
{
}

struct VertOut
{
    [builtin(position)] position: vec4[f32],
    [location(0)] color: vec3[f32]
}

[entry(vert)]
fn main(input: VertIn) -> VertOut
{
    let output: VertOut;

    let position: vec2[f32];
    let color: vec3[f32];

    output.position = vec4[f32](position, 0., 1.);
    output.color = color;

    return output;
}

struct FragOut
{
    [location(0)] color: vec4[f32]
}

[entry(frag)]
fn main(input: VertOut) -> FragOut
{
    let output: FragOut;
    output.color = vec4[f32](input.color, 1.);

    return output;
}
