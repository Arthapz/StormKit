// Copyright (C) 2022 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#pragma once

#include <stormkit/core/FormatMacro.hpp>

#if defined(STORMKIT_CXX20_MODULES)
// clang-format off
export module stormkit.gpu.core.physicaldeviceinfo;
// clang-format on
export {
#else
    /////////// - StormKit::core - ///////////
    #include <stormkit/core/Format.mpp>
    #include <stormkit/core/Types.mpp>

    /////////// - StormKit::render - ///////////
    #include <stormkit/gpu/core/Enums.mpp>
    #include <stormkit/gpu/core/Fwd.hpp>
#endif

    namespace stormkit::gpu {
        struct PhysicalDeviceInfo {
            core::UInt64 device_id;
            std::string device_name;
            core::UInt64 vendor_id;
            std::string vendor_name;

            core::UInt32 api_major_version;
            core::UInt32 api_minor_version;
            core::UInt32 api_patch_version;

            core::UInt32 driver_major_version;
            core::UInt32 driver_minor_version;
            core::UInt32 driver_patch_version;

            std::array<core::UInt8, VK_UUID_SIZE> pipeline_cache_uuid;

            PhysicalDeviceType type;
        };

        FORMATTER(stormkit::gpu::PhysicalDeviceInfo,
                  "PhysicalDeviceInfo {{\n"
                  "   device_id: {:#06x},\n"
                  "   device_name: {},\n"
                  "   vendor_id: {:#06x},\n"
                  "   vendor_name: {},\n"
                  "   api_version: {}.{}.{},\n"
                  "   driver_version: {}.{}.{},\n"
                  "   type: {}\n"
                  "}}",
                  data.device_id,
                  data.device_name,
                  data.vendor_id,
                  data.vendor_name,
                  data.api_major_version,
                  data.api_minor_version,
                  data.api_patch_version,
                  data.driver_major_version,
                  data.driver_minor_version,
                  data.driver_patch_version,
                  to_string(data.type));
    } // namespace stormkit::gpu

    CUSTOM_FORMAT(stormkit::gpu::PhysicalDeviceInfo, stormkit::gpu::toString(data))

#if defined(STORMKIT_CXX20_MODULES)
}
#endif
