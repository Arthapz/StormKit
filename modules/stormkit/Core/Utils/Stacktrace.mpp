module;

#include <stormkit/Core/PlatformMacro.hpp>

#include <cstdio>
#include <version>

#if defined(__cpp_lib_stacktrace) and __cpp_lib_stacktrace >= 202011L
    #define STD_STACKTRACE_SUPPORTED
#else
    #include <boost/stacktrace.hpp>
#endif

export module stormkit.Core:Utils.Stacktrace;

import std;

export namespace stormkit::core {
    STORMKIT_API auto printStacktrace() noexcept -> void;
} // namespace stormkit::core

////////////////////////////////////////////////////////////////////
///                      IMPLEMENTATION                          ///
////////////////////////////////////////////////////////////////////

namespace stormkit::core {
    /////////////////////////////////////
    /////////////////////////////////////
    STORMKIT_FORCE_INLINE auto printStacktrace() noexcept -> void {
        std::println(stderr, "================= CALLSTACK =================");
#if defined(STD_STACKTRACE_SUPPORTED)
        const auto st = std::to_string(std::stacktrace::current());
#else
        const auto st = boost::stacktrace::to_string(boost::stacktrace::stacktrace {});
#endif
        std::println(stderr, "{}", st);
    }
} // namespace stormkit::core
