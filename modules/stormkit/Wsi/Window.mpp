// Copyright (C) 2023 Arthur LAURENT <arthur.laurent4@gmail.com>
// This file is subject to the license terms in the LICENSE file
// found in the top-level of this distribution

module;

#include <stormkit/Core/PlatformMacro.hpp>

export module stormkit.Wsi:Window;

import std;

import stormkit.Core;

import :Types;

namespace stormkit::wsi {
    class WindowImpl;
}

export namespace stormkit::wsi {
    class STORMKIT_API Window {
      public:
        Window() noexcept;
        Window(std::string title, const core::math::ExtentU& size, WindowStyle style) noexcept;
        ~Window();

        Window(Window&&);
        auto operator=(Window&&) -> Window&;

        auto create(std::string title, const core::math::ExtentU& size, WindowStyle style) noexcept
            -> void;
        auto close() noexcept -> void;

        [[nodiscard]] auto pollEvent(Event& event) noexcept -> bool;
        [[nodiscard]] auto waitEvent(Event& event) noexcept -> bool;

        auto setTitle(std::string title) noexcept -> void;

        auto setFullscreenEnabled(bool fullscreen) noexcept -> void;

        auto setExtent(const core::math::ExtentU& extent) noexcept -> void;

        auto lockMouse() noexcept -> void;
        auto unlockMouse() noexcept -> void;
        auto hideMouse() noexcept -> void;

        [[nodiscard]] auto extent() const noexcept -> const core::math::ExtentU&;
        [[nodiscard]] auto title() const noexcept -> const std::string&;

        [[nodiscard]] auto isOpen() const noexcept -> bool;
        [[nodiscard]] auto visible() const noexcept -> bool;

        [[nodiscard]] auto nativeHandle() const noexcept -> NativeHandle;

        [[nodiscard]] auto mouseLocked() const noexcept -> bool;
        [[nodiscard]] auto fullscreen() const noexcept -> bool;

        auto               setKeyRepeatEnabled(bool enabled) noexcept -> void;
        [[nodiscard]] auto keyRepeatEnabled() const noexcept -> bool;

        auto setVirtualKeyboardVisible(bool visible) noexcept -> void;

        auto        setMousePosition(const core::math::Vector2I& position) noexcept -> void;
        static auto setMousePositionOnDesktop(const core::math::Vector2U& position) noexcept
            -> void;

        [[nodiscard]] static auto getMonitorSettings() -> std::vector<Monitor>;
        [[nodiscard]] static auto getPrimaryMonitorSettings() -> Monitor;

        [[nodiscard]] static auto wm() noexcept -> WM;

      private:
        using WindowImplPimpl = core::Pimpl<WindowImpl>;
        WindowImplPimpl m_impl;
    };

    STORMKIT_API auto parseArgs(std::span<const std::string_view> args) noexcept -> void;
} // namespace stormkit::wsi
