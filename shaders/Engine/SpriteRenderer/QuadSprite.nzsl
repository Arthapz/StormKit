[nzsl_version("1.0")]

module Shader;

struct VertIn {
    [location(0)] position: vec2[f32],
    [location(1)] uv: vec2[f32]
}

struct VertOut {
    [builtin(position)] position: vec4[f32], 
    [location(0)] uv: vec2[f32]
}

[entry(vert)] fn main(input: VertIn) -> VertOut {
    let output: VertOut;

    output.position = vec4[f32](input.position, 0., 1.);
    output.uv    = input.uv;

    return output;
}

struct FragOut {
    [location(0)] color: vec4[f32]
}

[entry(frag)] fn main(input: VertOut) -> FragOut {
    let output: FragOut;

    output.color = vec4[f32](input.uv, 1., 1.);

    return output;
}
